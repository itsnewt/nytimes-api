{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Navbar.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_Navbar__WEBPACK_IMPORTED_MODULE_1__","a","createElement","class","m","module","exports","require","default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","React","createContext","PropTypes","object","string","isRequired","func","gatsby__WEBPACK_IMPORTED_MODULE_1__","to","className","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","propTypes","shape"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAOeE,EAAA,0BACbE,EAAAG,EAAAC,cAAA,WACEJ,EAAAG,EAAAC,cAACF,EAAA,EAAD,MAEAF,EAAAG,EAAAC,cAAA,MAAIC,MAAM,SAAV,0BACAL,EAAAG,EAAAC,cAAA,KAAGC,MAAM,YAAT,6GCZJ,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/C,IAAAP,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAY,EAAAf,EAAA,GAAAgB,EAAAhB,EAAAK,EAAAU,GAAAE,EAAAjB,EAAA,IAAAkB,EAAAlB,EAAAK,EAAAY,GAAAjB,EAAAmB,EAAAjB,EAAA,sBAAAgB,EAAAX,IAAAP,EAAA,KAY2BoB,IAAMC,cAAc,IA0CvCC,IAAUC,OACTD,IAAUE,OAAOC,WAChBH,IAAUI,KACRJ,IAAUI,uCCzDtB,IAAAvB,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAwB,EAAA3B,EAAA,KAOeE,EAAA,oBACbE,EAAAG,EAAAC,cAAA,WACEJ,EAAAG,EAAAC,cAAA,UACEJ,EAAAG,EAAAC,cAAA,UACEJ,EAAAG,EAAAC,cAACmB,EAAA,EAAD,CAAMC,GAAG,IAAIC,UAAU,SAAvB,gBAIFzB,EAAAG,EAAAC,cAAA,OAAKqB,UAAU,SACbzB,EAAAG,EAAAC,cAAA,UACEJ,EAAAG,EAAAC,cAACmB,EAAA,EAAD,CAAMC,GAAG,SAAT,+GCXJE,EAAmB,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOhB,IAAMZ,cAAc6B,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBV,EAAiBW,UAAY,CAC3BT,SAAUV,IAAUoB,MAAM,CACxBN,SAAUd,IAAUE,OAAOC,aAC1BA,YAGUK","file":"component---src-pages-404-js-052b3f3c355191b5f178.js","sourcesContent":["// import react\r\nimport React from \"react\"\r\n\r\n// import components\r\nimport Navbar from \"../components/Navbar\"\r\n\r\n// export page\r\nexport default () => (\r\n  <div>\r\n    <Navbar />\r\n\r\n    <h1 class=\"title\">You seem to be lost...</h1>\r\n    <p class=\"subtitle\">\r\n      Uh oh! You've got yourself lost! Not to worry, we can get you set back on\r\n      track...\r\n    </p>\r\n  </div>\r\n)\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","// import modules\r\nimport React from \"react\"\r\n\r\n// import components\r\nimport { Link } from \"gatsby\"\r\n\r\n// export component\r\nexport default () => (\r\n  <nav>\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/\" className=\"brand\">\r\n          nytimes-api\r\n        </Link>\r\n      </li>\r\n      <div className=\"right\">\r\n        <li>\r\n          <Link to=\"/docs\">Docs</Link>\r\n        </li>\r\n      </div>\r\n    </ul>\r\n  </nav>\r\n)\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}